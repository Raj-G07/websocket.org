---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout
  title="Once Upon a Socket - A (Mostly) True Love Story of the Realtime Web"
  description="An illustrated story about WebSockets, perfect for explaining real-time communication to developers and beginners."
>
  <div class="story-container">
    <div class="story-header">
      <h1>
        Once Upon a Socket <span class="dash">â€”</span>
        <span class="subtitle">A (Mostly) True Love Story of the Realtime Web</span>
      </h1>
      <p class="attribution">
        brought to you by <a href="/">websocket.org</a>
      </p>
    </div>

    <div class="book-wrapper">
      <div id="storybook" class="storybook-container"></div>

      <div class="controls">
        <button id="prev-btn" class="nav-btn" aria-label="Previous page">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M15 18l-6-6 6-6"></path>
          </svg>
        </button>

        <div class="page-info">
          <span id="current-page">1</span>
          <span class="separator">/</span>
          <span id="total-pages">36</span>
        </div>

        <button id="next-btn" class="nav-btn" aria-label="Next page">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M9 18l6-6-6-6"></path>
          </svg>
        </button>
      </div>

      <div class="additional-controls">
        <button id="fullscreen-btn" class="control-btn">
          <svg
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              d="M8 3H5a2 2 0 00-2 2v3m18 0V5a2 2 0 00-2-2h-3m0 18h3a2 2 0 002-2v-3M3 16v3a2 2 0 002 2h3"
            ></path>
          </svg>
          <span>Fullscreen</span>
        </button>

        <button id="zoom-btn" class="control-btn">
          <svg
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <circle cx="11" cy="11" r="8"></circle>
            <path d="M21 21l-4.35-4.35M11 8v6m-3-3h6"></path>
          </svg>
          <span>Zoom</span>
        </button>

        <button id="download-btn" class="control-btn">
          <svg
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4m4-5l5 5 5-5m-5 5V3"></path>
          </svg>
          <span>Download PDF</span>
        </button>
      </div>
    </div>

    <div class="loading-overlay" id="loading">
      <div class="loader"></div>
      <p>Loading your story...</p>
    </div>
  </div>

  <style>
    .story-container {
      min-height: 100vh;
      background:
        radial-gradient(ellipse at top, #8b7ec8, #5a4a8a),
        linear-gradient(180deg, #6b5b95 0%, #4a3d6b 100%);
      padding: 0.75rem;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .story-header {
      text-align: center;
      color: white;
      margin-bottom: 0.75rem;
      padding: 0 1rem;
      animation: fadeInDown 0.8s ease;
    }

    .story-header h1 {
      font-size: 1.3rem;
      font-weight: 400;
      margin-bottom: 0.2rem;
      text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);
      font-family: 'Palatino', 'Palatino Linotype', 'Book Antiqua', Georgia, serif;
      letter-spacing: 0.5px;
      line-height: 1.3;
    }

    .story-header .dash {
      opacity: 0.6;
      margin: 0 0.25rem;
    }

    .story-header .subtitle {
      font-size: 0.9rem;
      opacity: 0.85;
      font-style: italic;
      font-weight: 300;
    }

    .story-header .attribution {
      font-size: 0.75rem;
      opacity: 0.7;
      margin-top: 0.2rem;
      font-style: italic;
      letter-spacing: 0.3px;
    }

    .story-header .attribution a {
      color: white;
      text-decoration: none;
      border-bottom: 1px dotted rgba(255, 255, 255, 0.5);
      transition: all 0.2s ease;
    }

    .story-header .attribution a:hover {
      opacity: 1;
      border-bottom-style: solid;
      border-bottom-color: white;
    }

    .book-wrapper {
      position: relative;
      width: 100%;
      max-width: 1200px;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
      padding-bottom: 1rem;
    }

    .storybook-container {
      background: white;
      border-radius: 10px;
      box-shadow:
        0 30px 60px -20px rgba(0, 0, 0, 0.5),
        0 10px 20px -5px rgba(0, 0, 0, 0.3);
      overflow: hidden;
    }

    .controls {
      display: flex;
      align-items: center;
      gap: 2rem;
      background: white;
      padding: 1rem 2rem;
      border-radius: 50px;
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    }

    .nav-btn {
      width: 48px;
      height: 48px;
      border-radius: 50%;
      border: 2px solid #e5e7eb;
      background: white;
      color: #6b7280;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .nav-btn:hover:not(:disabled) {
      background: #667eea;
      color: white;
      border-color: #667eea;
      transform: scale(1.1);
    }

    .nav-btn:disabled {
      opacity: 0.3;
      cursor: not-allowed;
    }

    .page-info {
      font-size: 1.1rem;
      font-weight: 600;
      color: #374151;
      min-width: 80px;
      text-align: center;
    }

    .separator {
      margin: 0 0.5rem;
      color: #9ca3af;
    }

    .additional-controls {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
      justify-content: center;
    }

    .control-btn {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1.5rem;
      background: white;
      border: 2px solid #e5e7eb;
      border-radius: 25px;
      color: #6b7280;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .control-btn:hover {
      background: #667eea;
      color: white;
      border-color: #667eea;
      transform: translateY(-2px);
    }

    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(255, 255, 255, 0.95);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      transition: opacity 0.5s ease;
    }

    .loading-overlay.hidden {
      opacity: 0;
      pointer-events: none;
    }

    .loader {
      width: 60px;
      height: 60px;
      border: 4px solid #e5e7eb;
      border-top-color: #667eea;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }

    .loading-overlay p {
      margin-top: 1rem;
      color: #6b7280;
      font-size: 1.1rem;
    }

    @keyframes fadeInDown {
      from {
        opacity: 0;
        transform: translateY(-20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes spin {
      to {
        transform: rotate(360deg);
      }
    }

    /* Mobile styles */
    @media (max-width: 768px) {
      .story-container {
        padding: 0.5rem;
      }

      .story-header {
        margin-bottom: 0.5rem;
      }

      .story-header h1 {
        font-size: 1.1rem;
      }

      .story-header .dash {
        display: block;
        margin: 0.1rem 0;
      }

      .story-header .subtitle {
        font-size: 0.8rem;
        display: block;
      }

      .story-header .attribution {
        font-size: 0.7rem;
      }

      .controls {
        gap: 1.5rem;
        padding: 0.75rem 1.5rem;
      }

      .nav-btn {
        width: 40px;
        height: 40px;
      }

      .page-info {
        font-size: 1rem;
      }

      .control-btn {
        padding: 0.6rem 1.2rem;
        font-size: 0.9rem;
      }

      .control-btn span {
        display: none;
      }

      .additional-controls {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: white;
        padding: 0.5rem;
        border-radius: 25px;
        box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
      }
    }

    /* Fullscreen styles */
    .story-container:fullscreen {
      background: #1a1a1a;
    }

    .story-container:fullscreen .story-header {
      display: none;
    }

    .story-container:fullscreen .book-wrapper {
      height: 100vh;
      justify-content: center;
    }
  </style>

  <script is:inline src="https://unpkg.com/page-flip@2.0.7/dist/js/page-flip.browser.js"></script>
  <script is:inline>
    // Define pages array directly in the script - 36 individual pages
    const pages = [];
    for (let i = 1; i <= 36; i++) {
      const num = i.toString().padStart(2, '0');
      pages.push(`/story-images/pages/page-${num}.png`);
    }

    document.addEventListener('DOMContentLoaded', function () {
      const loadingOverlay = document.getElementById('loading');
      const storybookElement = document.getElementById('storybook');

      // Wait for library to load
      if (typeof St === 'undefined' || !St.PageFlip) {
        console.error('PageFlip library not loaded');
        loadingOverlay.innerHTML =
          '<p style="color: red;">Error: Library not loaded. Please refresh.</p>';
        return;
      }

      // Initialize PageFlip - configured for single pages
      const pageFlip = new St.PageFlip(storybookElement, {
        width: 585, // Width of single page
        height: 827, // Height of single page
        size: 'fixed',
        minWidth: 315,
        maxWidth: 585,
        minHeight: 420,
        maxHeight: 827,
        showCover: true, // First page is cover
        mobileScrollSupport: true,
        swipeDistance: 30,
        useMouseEvents: true,
        usePortrait: false, // Don't use double page spreads
        startPage: 0,
        autoSize: false,
        maxShadowOpacity: 0.5,
        showPageCorners: true,
        disableFlipByClick: false,
        drawShadow: true,
        flippingTime: 1000,
      });

      // Load pages
      console.log('Loading pages:', pages);

      try {
        pageFlip.loadFromImages(pages);

        // Hide loading overlay after images start loading
        setTimeout(() => {
          loadingOverlay.classList.add('hidden');
        }, 2000);
      } catch (error) {
        console.error('Error loading pages:', error);
        loadingOverlay.innerHTML =
          '<p style="color: red;">Error loading storybook. Please refresh the page.</p>';
      }

      // Navigation controls
      const prevBtn = document.getElementById('prev-btn');
      const nextBtn = document.getElementById('next-btn');
      const currentPageSpan = document.getElementById('current-page');
      const totalPagesSpan = document.getElementById('total-pages');

      totalPagesSpan.textContent = pages.length;

      prevBtn.addEventListener('click', () => {
        pageFlip.flipPrev();
      });

      nextBtn.addEventListener('click', () => {
        pageFlip.flipNext();
      });

      // Update page info and button states
      pageFlip.on('flip', (e) => {
        const currentPage = e.data + 1;
        currentPageSpan.textContent = currentPage;

        // Update button states
        prevBtn.disabled = currentPage === 1;
        nextBtn.disabled = currentPage === pages.length;
      });

      // Keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') {
          pageFlip.flipPrev();
        } else if (e.key === 'ArrowRight') {
          pageFlip.flipNext();
        }
      });

      // Fullscreen button
      const fullscreenBtn = document.getElementById('fullscreen-btn');
      fullscreenBtn.addEventListener('click', () => {
        const container = document.querySelector('.story-container');
        if (!document.fullscreenElement) {
          container.requestFullscreen().catch((err) => {
            console.error(`Error attempting to enable fullscreen: ${err.message}`);
          });
        } else {
          document.exitFullscreen();
        }
      });

      // Zoom button (simple implementation)
      const zoomBtn = document.getElementById('zoom-btn');
      let zoomed = false;
      zoomBtn.addEventListener('click', () => {
        zoomed = !zoomed;
        if (zoomed) {
          storybookElement.style.transform = 'scale(1.2)';
          storybookElement.style.transition = 'transform 0.3s ease';
        } else {
          storybookElement.style.transform = 'scale(1)';
        }
      });

      // Download button
      const downloadBtn = document.getElementById('download-btn');
      downloadBtn.addEventListener('click', () => {
        window.open('/once-upon-a-socket.pdf', '_blank');
      });
    });
  </script>
</BaseLayout>
